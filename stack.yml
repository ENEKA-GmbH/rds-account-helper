AWSTemplateFormatVersion: '2010-09-09'
Description: Provides an initial Seed Bucket

Parameters:

  Prefix:
    Type: "String"
    Description: "Prefix for each Resource"
  
  ProjectSlug:
    Type: "String"
    Description: "Name of Project"

  UniqueExtension:
    Type: "String"
    Description: "String to make the resource naming unique"

  Environment:
    Type: "String"
    Description: "Environment for deployment"
    Default: "false"
    AllowedValues:
      - "development"
      - "staging"
      - "production"
      - "false"
  
  SeedStackName:
    Type: "String"
    Description: "Name of main-seed stack"

  InfrastructureStackName:
    Type: "String"
    Description: "Name of Infrastructure Stack (that provides the network)"
    Default: "false"

  CfnNotificationTopicArn:
    Type: "String"
    Description: "Cloudformation Notification Topic Arn"
    Default: "false"

  FlagAutouseCidashNotificationTopic:
    Type: "String"
    Description: "Automatic usage of Cidash SNS Notification Topic"
    Default: "false"

  FeatureFlagSns2Slack:
    Type: "String"
    Description: "Add SNS Lambda Subscriber to Slack" 
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FeatureFlagPyMysqlLambdaLayer:
    Type: "String"
    Description: "Create pymysql lambda layer stack" 
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FeatureFlagCloudTrail:
    Type: "String"
    Description: "Activate CloudTrail Deployment"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FeatureFlagDbmgr:
    Type: "String"
    Description: "Add a Custom CFN Resource that allowes to create additional Users on RDS Databases"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FeatureFlagCostCredential:
    Type: "String"
    Description: "Creates Credentials for external Monitoring Systems that only allows to get Costs and Billing Information"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  PyMysqlLambdaLayerArn:
    Type: "String"
    Default: "false"
    Description: "ARN of PyMysql Lambda Layer. Only needed, if FeatureFlagPyMysqlLambdaLayer is false but FeatureFlagDbmgr is true"

Conditions:

  HasEnvironment:
    Fn::Not:
      - Fn::Equals:
          - "false"
          - !Ref "Environment"

  FlagNotify:
    Fn::Or:
      - Fn::Not:
          - Fn::Equals:
              - "false"
              - !Ref "CfnNotificationTopicArn"
      - Fn::Equals:
          - "true"
          - !Ref "FlagAutouseCidashNotificationTopic"

  FlagAutouseCidashNotificationTopic:
    Fn::Equals:
      - "true"
      - !Ref "FlagAutouseCidashNotificationTopic"

  FeatureFlagSns2Slack:
    Fn::Equals:
      - "true"
      - !Ref "FeatureFlagSns2Slack"

  FeatureFlagPyMysqlLambdaLayer:
    Fn::Equals:
      - "true"
      - !Ref "FeatureFlagPyMysqlLambdaLayer"

  FeatureFlagCloudTrail:
    Fn::Equals:
      - "true"
      - !Ref "FeatureFlagCloudTrail"

  FeatureFlagDbmgr:
    Fn::Equals:
      - "true"
      - !Ref "FeatureFlagDbmgr"

  FeatureFlagCostCredential:
    Fn::Equals:
      - "true"
      - !Ref "FeatureFlagCostCredential"

  PyMysqlDependencieDbmgr:
    Fn::And:
      - Fn::Equals:
          - !Ref "FeatureFlagPyMysqlLambdaLayer"
          - "false"
      - Fn::Not:
          - Fn::Equals:
              - !Ref "FeatureFlagDbmgr"
              - "false"

Resources:

  CloudTrailStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagCloudTrail"
    Properties:
      NotificationARNs:
        - Fn::If:
            - "FlagNotify"
            - Fn::If:
                - "FlagAutouseCidashNotificationTopic"
                - !ImportValue "cidashTopicArn"
                - !Ref "CfnNotificationTopicArn"
            - !Ref "AWS::NoValue" 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - Fn::If:
                - "HasEnvironment"
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "UniqueExtension" ]]
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/cloudtrail.yml"
      Parameters:
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"

  Sns2SlackStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: FeatureFlagSns2Slack
    Properties: 
      NotificationARNs:
        - Fn::If:
            - "FlagNotify"
            - Fn::If:
                - "FlagAutouseCidashNotificationTopic"
                - !ImportValue "cidashTopicArn"
                - !Ref "CfnNotificationTopicArn"
            - !Ref "AWS::NoValue" 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - Fn::If:
                - "HasEnvironment"
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "UniqueExtension" ]]
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/sns2slack.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"
        CfnNotificationTopicArn: !Ref "CfnNotificationTopicArn"

  PyMysqlLambdaLayerStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagPyMysqlLambdaLayer"
    Properties: 
      NotificationARNs:
        - Fn::If:
            - "FlagNotify"
            - Fn::If:
                - "FlagAutouseCidashNotificationTopic"
                - !ImportValue "cidashTopicArn"
                - !Ref "CfnNotificationTopicArn"
            - !Ref "AWS::NoValue" 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - Fn::If:
                - "HasEnvironment"
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "UniqueExtension" ]]
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/pymysql_lambdalayer.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        Environment: !Ref "Environment"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"

  DbmgrStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagDbmgr"
    Properties: 
      NotificationARNs:
        - Fn::If:
            - "FlagNotify"
            - Fn::If:
                - "FlagAutouseCidashNotificationTopic"
                - !ImportValue "cidashTopicArn"
                - !Ref "CfnNotificationTopicArn"
            - !Ref "AWS::NoValue" 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - Fn::If:
                - "HasEnvironment"
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "UniqueExtension" ]]
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/dbmgr.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"
        InfrastructureStackName: !Ref "InfrastructureStackName"
        PyMysqlLambdaLayer:
          Fn::If:
            - "PyMysqlDependencieDbmgr"
            - !Ref "PyMysqlLambdaLayerArn"
            - !GetAtt "PyMysqlLambdaLayerStack.Outputs.PyMysqlLambdaLayerArn"

  CostCredentialStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagCostCredential"
    Properties: 
      NotificationARNs:
        - Fn::If:
            - "FlagNotify"
            - Fn::If:
                - "FlagAutouseCidashNotificationTopic"
                - !ImportValue "cidashTopicArn"
                - !Ref "CfnNotificationTopicArn"
            - !Ref "AWS::NoValue" 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - Fn::If:
                - "HasEnvironment"
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "UniqueExtension" ]]
                - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/cost_credential.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
