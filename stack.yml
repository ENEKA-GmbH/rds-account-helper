AWSTemplateFormatVersion: '2010-09-09'
Description: Provides an initial Seed Bucket

Parameters:

  Name:
    Type: "String"
    Description: "DO NOT USE THIS PARAMETER IN CFN STACK; Its only for deploying"

  Prefix:
    Type: "String"
    Description: "Prefix for each Resource"
  
  ProjectSlug:
    Type: "String"
    Description: "Name of Project"

  Environment:
    Type: "String"
    Description: "Environment for deployment"
    AllowedValues:
      - "development"
      - "staging"
      - "production"
  
  SeedStackName:
    Type: "String"
    Description: "Name of main-seed stack"

  InfrastructureStackName:
    Type: "String"
    Description: "Name of Infrastructure Stack"

  UniqueExtension:
    Type: "String"
    Description: "String to make the resource naming unique"


  FlagCloudTrail:
    Type: "String"
    Description: "Activate CloudTrail Deployment"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FlagAWSBackup:
    Type: "String"
    Description: "Activate AWS Backup Plan"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"


  FlagAWSConfig:
    Type: "String"
    Description: "Activate AWS Config Monitorin"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FlagNotification:
    Type: "String"
    Description: "Activate Notification (SNS Topics)"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FlagNotificationSlack:
    Type: "String"
    Description: "Add SNS Lambda Subscriber to Slack" 
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  FlagLambdaLayer:
    Type: "String"
    Description: "Build Lambda Layers which are usefull for multiple reasons"

  FlagDbmgr:
    Type: "String"
    Description: "Add a Custom CFN Resource that allowes to create additional Users on RDS Databases"



Conditions:

  FeatureFlagCloudTrail:
    Fn::Equals:
      - "true"
      - !Ref "FlagCloudTrail"

  FeatureFlagNotification:
    Fn::Equals:
      - "true"
      - !Ref "FlagNotification"

  FeatureFlagAWSBackup:
    Fn::Equals:
      - "true"
      - !Ref "FlagAWSBackup"

  FeatureFlagAWSConfig:
    Fn::Equals:
      - "true"
      - !Ref "FlagAWSConfig"

  FeatureFlagLambdaLayer:
    Fn::Or:
      - Fn::Equals:
        - "true"
        - !Ref "FlagLambdaLayer"
      - Fn::Equals:
        - "true"
        - !Ref "FlagDbmgr"

  FeatureFlagNotificationSlack:
    Fn::Equals:
      - "true"
      - !Ref "FlagNotificationSlack"

  FeatureFlagDbmgr:
    Fn::Equals:
      - "true"
      - !Ref "FlagDbmgr"

Resources:

  CloudTrailStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: FeatureFlagCloudTrail
    Properties: 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "AWS::StackName", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/cloudtrail.yml"
      Parameters:
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"

  NotificationStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: FeatureFlagNotification
    Properties: 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "AWS::StackName", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/notify.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"
        FlagNotificationSlack: !Ref "FlagNotificationSlack"

  LambdaLayerStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagLambdaLayer"
    Properties: 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "AWS::StackName", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/lambda.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"

  DbmgrStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: "FeatureFlagDbmgr"
    Properties: 
      TemplateURL: 
        Fn::Join:
          - "/"
          - - "https:/"
            - Fn::ImportValue:
                !Join [":", [ !Ref "SeedStackName", "SeedBucketDomainName"]]
            - !Join [ "/", [ !Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "AWS::StackName", !Ref "UniqueExtension" ]]
            - !Ref "AWS::StackName"
            - "stack/dbmgr.yml"
      Parameters:
        MainStackName: !Ref "AWS::StackName"
        SeedStackName: !Ref "SeedStackName"
        Prefix: !Ref "Prefix"
        UniqueExtension: !Ref "UniqueExtension"
        ProjectSlug: !Ref "ProjectSlug"
        Environment: !Ref "Environment"
        InfrastructureStackName: !Ref "InfrastructureStackName"
        PyMysqlLambdaLayer: !GetAtt "LambdaLayerStack.Outputs.PyMysqlLambdaLayerArn"

Outputs:
  Sns2SlackFunctionName:
    Condition: "FeatureFlagNotificationSlack"
    Value: !GetAtt "NotificationStack.Outputs.Sns2SlackFunctionName"
