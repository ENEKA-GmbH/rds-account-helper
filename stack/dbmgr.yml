Parameters:

  MainStackName:
    Type: "String"
    Description: "Name of Parrent Stack"

  Prefix:
    Type: "String"
    Description: "Prefix for each Resource"
  
  ProjectSlug:
    Type: "String"
    Description: "Name of Project"

  Environment:
    Type: "String"
    Description: "Environment for deployment"
    AllowedValues:
      - "development"
      - "staging"
      - "production"
  
  SeedStackName:
    Type: "String"
    Description: "Name of main-seed stack"

  UniqueExtension:
    Type: "String"
    Description: "String to make the resource naming unique"

  PymysqlLambdaLayer:
    Type: "String"
    Description: "Pymysql lambda layer"

Resources:

  DbCredentialsCreateLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: "DbCredentialsCreateLambda"
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Join [ ':', [ !Ref 'SeedStackName', 'SeedBucketName' ]]
        S3Key: 
          Fn::Join:
            - "/"
            - - !Ref "Prefix" 
              - !Ref "ProjectSlug"
              - !Ref "Environment"
              - !Ref "MainStackName"
              - !Ref "UniqueExtension"
              - !Ref "MainStackName"
              - "build/dbmgr.zip"
      Handler: "index.handler"
      Runtime: "python3.7"
      Timeout: 120
      Role: !GetAtt "DatabaseCredentialApiRole.Arn"
        #VpcConfig:
        #SubnetIds:
        #  - !GetAtt "NetworkStack.Outputs.PrivateSubnetOne"
        #  - !GetAtt "NetworkStack.Outputs.PrivateSubnetTwo"
        #SecurityGroupIds:
        #  - !Ref 'DbCredentialsCreateSecurityGroup'
      Layers:
          - !Ref 'PymysqlLambdaLayer'


