AWSTemplateFormatVersion: 2010-09-09
Description: Enable AWS Config with central logging and notification

Parameters:

  MainStackName:
    Type: "String"
    Description: "Name of Parent Stack"

  Prefix:
    Type: "String"
    Description: "Prefix for each Resource"
  
  ProjectSlug:
    Type: "String"
    Description: "Name of Project"

  Environment:
    Type: "String"
    Description: "Environment for deployment"
    AllowedValues:
      - "development"
      - "staging"
      - "production"
  
  SnsCiDashSubscriberArn:
    Type: "String"
    Description: "ARN from lambda of Cidash Stack"
    Default: ""

  SeedStackName:
    Type: "String"
    Description: "Name of main-seed stack"

  UniqueExtension:
    Type: "String"
    Description: "String to make the resource naming unique"

  FlagNotificationSlack:
    Type: "String"
    Description: "Enable Slack lambda method"

Conditions:

  FeatureFlagCiDash:
    Fn::Not:
      Fn::Equals:
        - ""
        - !Ref "SnsCiDashSubscriberArn"

  FeatureFlagNotificationSlack:
    Fn::Equals:
      - "true"
      - !Ref "FlagNotificationSlack"

Resources:

  SnsKmsKey:
    Type: "AWS::KMS::Key"
    Properties:
      Description: "KMS key for all SNS Topics"
      Enabled: true
      KeyPolicy:
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "sns.amazonaws.com"
            Resource: "*"
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
          - Effect: "Allow"
            Principal: "*"
            Resource: "*"
            Action:
              - "kms:*"
          - Effect: "Allow"
            Principal:
              Service: "budgets.amazonaws.com"
            Action:
              - "kms.GenerateDataKey*"
              - "kms:Encrypt"
            Resource: "*"

  CfnTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "global-cfn"
      DisplayName: "cloudformation deployment Notifications" 
      KmsMasterKeyId: !Ref "SnsKmsKey"

  MonitoringTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "global-monitoring"
      DisplayName: "CloudWatch / Monitoring Notifications"
      KmsMasterKeyId: !Ref "SnsKmsKey"
  
  ControllingTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "global-controlling"
      DisplayName: "Budget,Trustadvisor Billing Notifications"
      KmsMasterKeyId:  !Ref "SnsKmsKey"

  OpsTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "global-ops"
      DisplayName: "CFN Notifications" 
      KmsMasterKeyId: !Ref "SnsKmsKey"

  CfnTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      Topics:
        - !Ref "CfnTopic"
        - !Ref "ControllingTopic"
        - !Ref "MonitoringTopic"
        - !Ref "OpsTopic"
      PolicyDocument:
        Statement:
          - Sid: "OwnAccount"
            Action:
              - "sns:Publish"
            Effect: "Allow"
            Resource: "*"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
                - "budgets.amazonaws.com"

  CiDashSubscription:
    Condition: "FeatureFlagCiDash"
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "lambda"
      Endpoint: !Ref "SnsCiDashSubscriberArn"
      TopicArn: !Ref "CfnTopic"

  Sns2SlackSubscribtion:
    Condition: "FeatureFlagNotificationSlack"
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "lambda"
      Endpoint: !GetAtt "Sns2SlackFunction.Arn"
      TopicArn: !Ref "CfnTopic" 

  Sns2SlackInvokePermission:
    Condition: "FeatureFlagNotificationSlack"
    Type: "AWS::Lambda::Permission"
    Properties: 
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref "Sns2SlackFunction"
      SourceArn: !Ref "CfnTopic"
      Principal: "sns.amazonaws.com"

  Sns2SlackSecret:
    Condition: "FeatureFlagNotificationSlack"
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name:
        Fn::Join:
          - "/"
          - - !Ref "Prefix"
            - !Ref "ProjectSlug"
            - !Ref "Environment"
            - !Sub "sns2slack-${UniqueExtension}"
      SecretString: |
        {
          "slack_token": "",
          "slack_channel": "cfn=eneka-dev:eneka-dev",
          "allowed_cfn_states": "CREATE_COMPLETE;CREATE_FAILED;DELETE_COMPLETE;DELETE_FAILED;UPDATE_FAILED;UPDATE_ROLLBACK_COMPLETE;UPDATE_COMPLETE",
          "slack_username": "DevOpsBot"
        }
    
  Sns2SlackFunctionIamRole:
    Condition: "FeatureFlagNotificationSlack"
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "lambda.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:*"
            Resource: "arn:aws:logs:*:*:*"
          - Effect: "Allow"
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref "Sns2SlackSecret"

  Sns2SlackFunction: 
    Condition: "FeatureFlagNotificationSlack"
    Type: "AWS::Lambda::Function"
    Properties: 
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Join [":", [!Ref "SeedStackName", "SeedBucketName"]]
        S3Key: !Join [ "/", [!Ref "Prefix", !Ref "ProjectSlug", !Ref "Environment", !Ref "MainStackName", !Ref "UniqueExtension", !Ref "MainStackName", "build", "sns2slack.zip" ]]
          #FunctionName: "sns2slack"
      Environment:
        Variables:
          SecretName: !Ref "Sns2SlackSecret"
          AwsRegion: !Ref "AWS::Region"
      Handler: "main.lambda_handler"
      MemorySize: 128
      PackageType: "Zip"
        #ReservedConcurrentExecutions: Integer
      Role: !GetAtt "Sns2SlackFunctionIamRole.Arn"
      Runtime: "python3.8"
      Timeout: 5 


Outputs:
  
  SnsTopicCfnArn:
    Value: !Ref "CfnTopic"
    Export:
      Name:
        !Join [":", [ !Ref "MainStackName", "SnsTopicCfnArn"]]

  SnsTopicControllingArn:
    Value: !Ref "ControllingTopic"
    Export:
      Name:
        !Join [":", [ !Ref "MainStackName", "nsTopicControllingArn"]]

  SnsTopicMonitoringArn:
    Value: !Ref "MonitoringTopic"
    Export:
      Name:
        !Join [":", [ !Ref "MainStackName", "SnsTopicMonitoringArn"]]

  SnsTopicOpsArn:
    Value: !Ref "OpsTopic"
    Export:
      Name:
        !Join [":", [ !Ref "MainStackName", "SnsTopicOpsArn"]]

  Sns2SlackFunctionName:
    Condition: "FeatureFlagNotificationSlack"
    Value: !Ref "Sns2SlackFunction"
    Export:
      Name: !Join [":", [!Ref "MainStackName", "Sns2SlackFunctionName"]]
